//Rippler Code
(function ($, exports) {

    var lvRipple = (function () {

        var elements = {
            enable: [],
            disable: []
        };

        var rippleEventArray = []; //single init ripple

        var rippleConfig = {
            'rippleOpacity': .2,
            'rippleDelay': 100,
            'mobileTouch': false
        };

        function findElement() {
            elements.enable = $("ripple, *[ripple], .ripple").toArray();
        }

        function arrayRemove(array, elem) {
            var index = array.indexOf(elem);
            if (index > -1) {
                delete array[index];
            }
            return arrayClear(array);
        }

        function arrayClear(array) {
            return array.filter(function (n) { return n != undefined });
        }

        function _destroyElements() {
            $(elements.enable).each(function (index, el) {
                delete elements.enable[index];
                $(el).trigger('r-destroy');
            });
            elements.enable = arrayClear(elements.enable);
        }

        function _disableElements() {
            $(elements.enable).each(function (index, el) {
                delete elements.enable[index];
                $(el).trigger('r-disable');
                elements.disable.push(el);
            });
            elements.enable = arrayClear(elements.enable);
        }

        function _enableElements() {
            $(elements.disable).each(function (index, el) {
                delete elements.disable[index];
                $(el).trigger('r-enable');
                elements.enable.push(el);
            });
            elements.disable = arrayClear(elements.disable);
        }

        function _updateElements() {
            $(elements.enable).each(function (index, el) {
                $(el).trigger('r-update');
            });
        }

        function destroyElement(elem) {
            elements.enable = arrayRemove(elements.enable, $(elem)[0]);
            $(elem).trigger('r-destroy');
        }

        function disableElement(elem) {
            elements.enable = arrayRemove(elements.enable, $(elem)[0]);
            $(elem).trigger('r-disable');
            elements.disable.push($(elem)[0]);
        }

        function enableElement(elem) {
            elements.disable = arrayRemove(elements.disable, $(elem)[0]);
            $(elem).trigger('r-enable');
            elements.enable.push($(elem)[0]);
        }

        function updateElement(elem) {
            $(elem).trigger('r-update');
        }

        function createMarkup(element) {
            var content = $(element).html();
            var markup = $("<button></button>");
            var overink = $(element).hasClass('r-overink');

            if (overink) {
                markup = $("<div></div>");
                var replacement = $("<button></button>");
            }


            if ($(element).prop('nodeName').toLowerCase() != "ripple") {
                var cloneElement = $(element).clone();
                $(cloneElement).empty();
                $(cloneElement).removeClass('ripple');
                $(cloneElement).removeAttr('ripple');
                $(cloneElement).removeAttr('data-ripple');
                $(cloneElement).removeAttr('lv-ripple');

                if (overink) {
                    replacement = $(cloneElement);
                } else {
                    markup = $(cloneElement);
                }
            }

            markup.addClass('ripple-cont');

            if (overink) {
                replacement.addClass('ripple-content');
                replacement.html(content);

                markup.append(replacement);
            } else {
                markup.append("<div class='ripple-content'>" + content + "</div>");
            }

            markup.append("<div class='ink-content'></div>");
            return markup[0].outerHTML;
        }

        function replaceElement(element, newType) {
            var attrs = {};

            el = $(element);

            $.each(el[0].attributes, function (idx, attr) {
                attrs[attr.nodeName] = attr.nodeValue;
            });

            el = $("<" + newType + "/>", attrs);

            return el;
        }

        function createAllElements() {
            $(elements.enable).each(function (index, el) {
                var markup = createMarkup(el);
                var idmark = $.now();
                markup = $(markup);
                markup.addClass("ripple-idm-" + idmark);

                $(el).after(markup).remove();
                markup = $(".ripple-idm-" + idmark);
                markup.removeClass("ripple-idm-" + idmark);

                elements.enable[index] = markup[0];
                rippleInit(markup[0], index);
            });
        }

        function createElement(elem) {
            if ($(elem).length <= 1) {
                var markup = createMarkup(elem);
                var idmark = $.now();
                markup = $(markup);
                markup.addClass("ripple-idm-" + idmark);

                $(elem).after(markup).remove();
                markup = $(".ripple-idm-" + idmark);
                markup.removeClass("ripple-idm-" + idmark);

                var index = elements.enable.push(markup[0]);
                return rippleInit(markup[0], index);
            } else {
                $(elem).each(function (index, el) {
                    return createElement(el);
                });
            }
        }

        function rippleInit(element, index) {

            var elem = null;
            var rippleCont = null;
            var inkLight = false;
            var inkColor = false;
            var customOpacity = null;
            var icon = false;
            var overInk = false;
            var preventInk = false;
            var index = index;
            var longTouch = null;
            var scrollTouch = null;

            elem = $(element);
            element = elem[0];

            if (typeof PointerEventsPolyfill !== "undefined") {
                PointerEventsPolyfill.initialize({
                    'selector': elem,
                    'mouseEvents': ['click', 'dblclick']
                });
            }

            var listenType = {
                "start": ('ontouchstart' in document.documentElement)
						? !!rippleConfig.mobileTouch
							? 'touchstart'
							: 'click'
						: 'mousedown',
                "end": ('ontouchend' in document.documentElement) ? 'touchend' : 'mouseup'
            };

            rippleEventArray[index] = [];

            elem.on("r-destroy", function () {
                elem.children(".ink-content").remove();
                var cont = elem.find(".ripple-content").html();
                elem.find(".ripple-content").remove();
                elem.append(cont);
                elem.removeClass('ripple-cont');
                elem.unbind(listenType.start, createRipple);
            });

            elem.on("r-disable", function () {
                elem.unbind(listenType.start, createRipple);
            });

            elem.on("r-enable", function () {
                elem.bind(listenType.start, createRipple);
            });

            elem.on("r-update", function () {
                _setValue();
            });

            elem.removeClass('ripple');
            rippleCont = elem.children(".ink-content");

            function _setValue() {
                icon = elem.hasClass('r-icon');
                overInk = elem.hasClass('r-overink');
                inkLight = typeof element.attributes['r-light'] !== "undefined";
                inkColor = typeof element.attributes['r-color'] !== "undefined" ? element.attributes['r-color'].nodeValue : false;
                customOpacity = typeof element.attributes['r-opacity'] !== "undefined" ? element.attributes['r-opacity'].nodeValue : null;
                preventInk = typeof element.attributes['r-prevent'] !== "undefined" ? element.attributes['r-prevent'].nodeValue : false;
            }

            _setValue();

            elem.bind(listenType.start, createRipple);

            function createRipple(event) {
                var timeStamp = event.timeStamp;

                if (timeStamp == 0) {
                    var date = new Date();
                    timeStamp = date.getTime();
                }

                if (elem.hasClass('r-childprevent')) return elem.removeClass('r-childprevent');
                elem.parents(".ripple-cont").addClass('r-childprevent');

                if (rippleEventArray[index].indexOf(event.timeStamp) != -1) return;
                rippleEventArray[index].push(event.timeStamp);

                var targetInk = $(event.target);

                if (typeof element.attributes['r-disabled'] != "undefined" || elem.hasClass('disabled')) return;
                if (targetInk.hasClass('r-noink') || !!targetInk.parents('.r-noink').length) return;
                if (!!preventInk && elem.is(preventInk)) return;

                if (!!overInk) rippleCont.show(0);

                var inkWrapper = $("<div class='ink'><i></i></div>");
                var ink = inkWrapper.find("i");
                var incr = 0;
                var incrmax = 0;

                rippleCont.find(".ink").removeClass('new');
                inkWrapper.addClass('new');

                rippleCont.prepend(inkWrapper);

                //Set x and y position inside ripple content
                var x = event.type != "touchstart" ?
					event.pageX - rippleCont.offset().left :
					event.originalEvent.touches[0].pageX - rippleCont.offset().left;

                var y = event.type != "touchstart" ?
					event.pageY - rippleCont.offset().top :
					event.originalEvent.touches[0].pageY - rippleCont.offset().top;

                // if icon set default position: 50% 50%
                if (!icon) {
                    inkWrapper.css({ top: y + 'px', left: x + 'px' });

                    //Set translate of user from center of ripple content
                    x = x > rippleCont.outerWidth() / 2 ? x - rippleCont.outerWidth() / 2 : rippleCont.outerWidth() / 2 - x;
                    y = y > rippleCont.outerHeight() / 2 ? y - rippleCont.outerHeight() / 2 : rippleCont.outerHeight() / 2 - y;
                } else {
                    x = 0;
                    y = 0;
                }

                //Set total translate
                var tr = (x * 2) + (y * 2);

                var h = rippleCont.outerHeight();
                var w = rippleCont.outerWidth();

                //Set diagonal of ripple container
                var d = Math.sqrt(w * w + h * h);
                //Set incremental diameter of ripple
                var incrmax = tr;

                incrmax = icon ? 0 : incrmax;

                inkWrapper.css({ height: d, width: d });

                ink.css("opacity", 0);

                var inkOpacity = customOpacity || rippleConfig.rippleOpacity;

                if (!!inkColor) {
                    ink.css("background-color", inkColor);
                } else if (!!inkLight) {
                    ink.css("background-color", "rgb(255,255,255)");
                }

                if (!icon) {
                    rippleCont.css("background-color", 'rgba(0,0,0,' + .098 + ')');

                    if (!!inkColor) {
                        var rgba = hexToRGB(inkColor);
                        rippleCont.css("background-color", 'rgba(' + rgba.r + ',' + rgba.g + ',' + rgba.b + ',' + .098 + ')');
                    } else if (!!inkLight) {
                        rippleCont.css("background-color", 'rgba(255,255,255,' + .098 + ')');
                    }
                }

                setTimeout(function () {
                    inkWrapper.addClass('animate');
                }, 1);

                // ink.css({height: d+incr, width: d+incr});

                ink.css({ opacity: inkOpacity });

                var inkGrow = null;

                function hoverIncrement() {
                    var incrStep = ((incrmax - incr) / 100) * 10
                    inkGrow = setInterval(function () {
                        if (incr < incrmax) {
                            incr += incrStep;
                            inkWrapper.css({
                                height: d + incr,
                                width: d + incr
                            });
                        } else {
                            clearInterval(inkGrow);
                        }
                    }, 50);
                }

                function listenerPress() {
                    $(window).bind(listenType.end + ' blur', removeInk);
                    elem.bind('mouseleave', removeInk);
                }

                function removeInk() {
                    $(window).unbind(listenType.end + ' blur', removeInk);
                    elem.unbind('mouseleave', removeInk);

                    clearInterval(inkGrow);
                    clearInterval(longTouch);
                    clearInterval(scrollTouch);

                    var delay = incr <= incrmax ? rippleConfig.rippleDelay : 1;
                    incr = incr < incrmax ? incrmax : incr;
                    inkWrapper.css({
                        height: d + incr,
                        width: d + incr
                    });
                    setTimeout(function () {
                        ink.css({
                            opacity: 0
                        });
                        if (!!inkWrapper.hasClass('new') && !icon) rippleCont.css("background-color", "");
                        setTimeout(function () {
                            inkWrapper.remove();
                            if (!!overInk && !rippleCont.find(".ink").length) rippleCont.hide(0);
                        }, 550);
                    }, delay);
                }

                hoverIncrement();

                if (event.type == "mousedown" && event.which !== 1) {
                    setTimeout(function () {
                        removeInk();
                    }, 100);
                } else if (event.type == "click") {
                    setTimeout(function () {
                        removeInk();
                    }, 300);
                } else if (event.type == "touchstart") {
                    longTouch = setTimeout(function () {
                        removeInk();
                    }, 1000);
                    $(window).bind('scroll', forceRemoveInk);
                    scrollTouch = setTimeout(function () {
                        $(window).unbind('scroll', forceRemoveInk);
                    }, 500);
                    listenerPress();
                } else {
                    listenerPress();
                }
            }

            function _destroySelf() {
                elements.enable = arrayRemove(elements.enable, $(elem)[0]);
                elem.children(".ink-content").remove();
                var cont = elem.find(".ripple-content").html();
                elem.find(".ripple-content").remove();
                elem.append(cont);
                elem.removeClass('ripple-cont');
                elem.unbind('mousedown touchstart', createRipple);
            }

            function _disableSelf() {
                elements.enable = arrayRemove(elements.enable, $(elem)[0]);
                elem.unbind('mousedown touchstart', createRipple);
                elements.disable.push($(elem)[0]);
            }

            function _enebleSelf() {
                elements.disable = arrayRemove(elements.disable, $(elem)[0]);
                elem.bind('mousedown touchstart', createRipple);
                elements.enable.push($(elem)[0]);
            }

            return {
                element: elem,
                destroy: _destroySelf,
                disable: _disableSelf,
                enable: _enebleSelf,
                update: _setValue
            }
        }

        function hexToRGB(hex) {

            var patt = /^#([\da-fA-F]{2})([\da-fA-F]{2})([\da-fA-F]{2})$/;
            var matches = patt.exec(hex);

            return {
                r: parseInt(matches[1], 16),
                g: parseInt(matches[2], 16),
                b: parseInt(matches[3], 16)
            };
        }

        function _init(config) {
            !!config ? _setConfig(config) : $.noop();
            findElement();
            createAllElements();
        }

        function _initElement(elem) {
            return !!elem ? createElement(elem) : createElement(this);
        }

        function _getList() {
            return elements;
        }

        function _getRippleEventArray() {
            return rippleEventArray;
        }

        function _setConfig(config) {
            $.extend(rippleConfig, config);
        }

        function _findCommand(cmd) {
            switch (cmd) {
                case "enable": enableElement(this)
                    break;
                case "disable": disableElement(this)
                    break;
                case "destroy": destroyElement(this)
                    break;
                case "update": updateElement(this)
                    break;
                default: return _initElement(this);
                    break;
            }
        }

        return {
            init: _init,
            initElement: _initElement,
            list: _getList,
            eventHistory: _getRippleEventArray,
            config: _setConfig,
            destroy: _destroyElements,
            disable: _disableElements,
            enable: _enableElements,
            update: _updateElements,
            switch: _findCommand
        }
    })();

    // exports.lvRipple = exports.lvRipple || lvRipple;
    $.ripple = lvRipple;
    $.fn.ripple = lvRipple.switch;


})(jQuery, window);







// Layout Code
//----------------------------------------------doSessionCheck
(function ($) {
    $.PT_stripSpaces = function (PT_str) {
        var PT_reg = new RegExp(" ", "g");
        return PT_str.replace(PT_reg, "");
    }
})(jQuery);
var PT_doSessionCheck = function (getBack) {

    getBack(null);
    
};

jQuery.fn.extend({


    ConnateLayout: function (para) {
        console.log(para)
        //$(body).hide();

        PT_doSessionCheck(function (err, result) {
            if (err) {
            }
            else {
                //$(body).show();
            }
        });





        if (para.appHeader == null) {
            para.appHeader = true;
        }

        if (para.leftNavBar == null) {
            para.leftNavBar = true;
        }
        var PT_TopHeader_Design = '';
        var PT_secondHeader_Design = '';
        var PT_LeftNavBar_Design = '';
        var PT_RightContent = '';

        var PT_Content = '';

        //Dynamic Layout Start
        /*
        PT_TopHeader_Design += '<nav class="navbar navbar-default navbar-fixed-top" id="PT_TopHeader">';
        PT_TopHeader_Design += '<div class="container-fluid"><div class="navbar-header">';
        PT_TopHeader_Design += '<button type="button" class="navbar-toggle collapsed" data-toggle="collapse"'
        PT_TopHeader_Design += 'data-target="#PT_TopHeaders" aria-expanded="false" aria-controls="navbar">';
        PT_TopHeader_Design += '<span class="sr-only">Toggle navigation</span><span class="icon-bar"></span>';
        PT_TopHeader_Design += '<span class="icon-bar"></span><span class="icon-bar"></span> </button>';
        PT_TopHeader_Design += '<a class="navbar-brand PT_title PT_dasboard PT_Token rippler rippler-default rippler-bs-info" href="/home/dashboard" ><img src="/Content/Images/layoutimgs/mobileMenu.svg" class="PT_Tmobile"/><ripple>Connate</ripple></a></div>';
        PT_TopHeader_Design += '<div id="PT_TopHeaders" class="navbar-collapse collapse">';
        // PT_TopHeader_Design+='<ul class="nav navbar-nav"><li class="active"><a href="#">Home</a></li>';
        // PT_TopHeader_Design+='<li><a href="#about">About</a></li><li><a href="#contact">Contact</a></li></ul>';
        PT_TopHeader_Design += '<ul class="nav navbar-nav navbar-right">';
        PT_TopHeader_Design += '<li class="PT_signUpView"><a href="#"><span class="glyphicon glyphicon-user"></span> Sign Up</a></li>';
        PT_TopHeader_Design += '<li class="PT_LoginView"><a href="#"><span class="glyphicon glyphicon-log-in"></span> Login</a></li>';
        PT_TopHeader_Design += '<li class="PT_UserName"><a href="#"></a></li>';
        PT_TopHeader_Design += '<li class="PT_GridView"><a href="#grid" data-toggle="myApps" data-placement="bottom" data-container="body"><img src="/Content/Images/layoutimgs/Grid.svg" class="GridImg"/></a></li>';
        PT_TopHeader_Design += '<li class="PT_MyaccountView"><a href="#myaccount" data-toggle="myAccount" data-placement="bottom" data-container="body"><img src="/Content/Images/layoutimgs/person-flat.png" class="PT_usreimg"/></a></li>';
        PT_TopHeader_Design += '</ul></div></div></nav>';
        */


        var SecondLeftMenu = '', SecondRightMenu = '', PT_alwaysTop = '';
        if (para.appNavItems != undefined) {
            for (i = 0; i < para.appNavItems.length; i++) {
                if (para.appNavItems[i].isRight) {
                    if (para.appNavItems[i].icon !== undefined) {
                        if (para.appNavItems[i].isAlwaysTop) {
                            PT_alwaysTop += '<div  class="PT_Top  PT_traget_Menu"><a href="' + para.appNavItems[i].url + '" class=""><img src="' + para.appNavItems[i].icon + '" class="PT_cog" /></a></div>';
                        }
                        else {
                            SecondRightMenu += '<div  class="PT_SecondRightMenu PT_traget_Menu"><a href="' + para.appNavItems[i].url + '" class=""><img src="' + para.appNavItems[i].icon + '" class="PT_cog" /></a></div>';
                        }

                    }
                    else {
                        //alert(para.appNavItems[i].isButton)
                        if (para.appNavItems[i].isButton) {
                            if (para.appNavItems[i].isAlwaysTop) {
                                PT_alwaysTop += '<div  class="PT_Top PT_traget_Menu"><a href="' + para.appNavItems[i].url + '" class="PT_btn ' + $.PT_stripSpaces(para.appNavItems[i].menuItem) + '">' + para.appNavItems[i].menuItem + '</a></div>';
                            }
                            else {
                                SecondRightMenu += '<div  class="PT_SecondRightMenu PT_traget_Menu"><a href="' + para.appNavItems[i].url + '" class="PT_btn ' + $.PT_stripSpaces(para.appNavItems[i].menuItem) + '">' + para.appNavItems[i].menuItem + '</a></div>';
                            }


                        }
                        else {

                            if (para.appNavItems[i].isAlwaysTop) {
                                PT_alwaysTop += '<div  class="PT_Top PT_traget_Menu"><a href="' + para.appNavItems[i].url + '" class="' + $.PT_stripSpaces(para.appNavItems[i].menuItem) + '">' + para.appNavItems[i].menuItem + '</a></div>';
                            }
                            else {
                                SecondRightMenu += '<div  class="PT_SecondRightMenu PT_traget_Menu"><a href="' + para.appNavItems[i].url + '" class="' + $.PT_stripSpaces(para.appNavItems[i].menuItem) + '">' + para.appNavItems[i].menuItem + '</a></div>';
                            }

                        }
                    }

                }
                else {
                    if (para.appNavItems[i].isStartPage) {
                        SecondLeftMenu += '<li  class="PT_traget_Menu PT_activemenu"><a href="' + para.appNavItems[i].url + '" class="' + $.PT_stripSpaces(para.appNavItems[i].menuItem) + ' ">' + para.appNavItems[i].menuItem + '</a></li>';
                        PT_ActiveNavigate = para.appNavItems[i].url;
                    }
                    else {
                        SecondLeftMenu += '<li  class="PT_traget_Menu"><a href="' + para.appNavItems[i].url + '" class="' + $.PT_stripSpaces(para.appNavItems[i].menuItem) + '">' + para.appNavItems[i].menuItem + '</a></li>';

                    }

                }

            }
        }
        PT_secondHeader_Design += '<nav class="navbar navbar-default navbar-fixed-top " id="PT_SecondHeader">';
        PT_secondHeader_Design += '<div class="container-fluid"><div class="navbar-header">';
        PT_secondHeader_Design += '<button type="button" class="navbar-toggle collapsed" data-toggle="collapse"'
        PT_secondHeader_Design += 'data-target="#PT_SecondHeaders" aria-expanded="false" aria-controls="navbar">';
        PT_secondHeader_Design += '<span class="sr-only">Toggle navigation</span><span class="icon-bar"></span>';
        PT_secondHeader_Design += '<span class="icon-bar"></span><span class="icon-bar"></span> </button>';
        PT_secondHeader_Design += '<a class="navbar-brand PT_title" href="#"><img src="/Content/Images/layoutimgs/mobileMenu.svg" class="PT_mobile"/><span class="PT_APPName">App  Name</span></a></div>';
        PT_secondHeader_Design += '<div id="PT_SecondHeaders" class="navbar-collapse collapse">';
        PT_secondHeader_Design += '<ul class="nav navbar-nav" data-toggle="collapse" id="PT_secondheader_UL" >';



        PT_secondHeader_Design += SecondLeftMenu;
        PT_secondHeader_Design += '</ul>';
        PT_secondHeader_Design += SecondRightMenu;
        PT_secondHeader_Design += '  </div></div></nav>';

        PT_secondHeader_Design += PT_alwaysTop;







        PT_LeftNavBar_Design += '<div class="PT_left_bar" >';
        PT_LeftNavBar_Design += '<ul id="PT_Left_UL">';

        if (para.leftNavItems != undefined) {
            for (i = 0; i < para.leftNavItems.length; i++) {
                if (para.leftNavItems[i].isStartPage) {
                    PT_LeftNavBar_Design += '<li  class="navactive" style="  border-left:4px solid #c53929;"><a href="' + para.leftNavItems[i].url + '">' + para.leftNavItems[i].menuItem + '</a></li>';
                }
                else {
                    PT_LeftNavBar_Design += '<li  class=""><a href="' + para.leftNavItems[i].url + '">' + para.leftNavItems[i].menuItem + '</a></li>';
                }

            }
        }

        PT_LeftNavBar_Design += '</ul></div>';
        //PT_RightContent += '<div class="PT_Right_Content"></div></div>';
        //PT_Content += '<div class="PT_View">';


        // Dynamic Layout End   

        //-----------------------------------------------------------------------------------------------------
        //Layout Design Conditions Start 
        if (para.appHeader) {


            if (para.leftNavBar) {

                $(this).html(PT_TopHeader_Design + PT_secondHeader_Design + PT_Content + PT_LeftNavBar_Design + PT_RightContent);
                $(".PT_signUpView,.PT_LoginView").hide();
                $("").ApplyCss();
                $("").PT_popOver();
                $(".PT_APPName").text(para.appTitle);
            }
            else {
                $(this).html(PT_TopHeader_Design + PT_secondHeader_Design + PT_Content + PT_RightContent);
                $("").ApplyCss();
                $(".PT_signUpView,.PT_LoginView").hide();
                $("").PT_popOver();
                $(".PT_APPName").text(para.appTitle);
            }
        }
        else {
            if (para.leftNavBar) {
                $(this).html(PT_TopHeader_Design + PT_Content + PT_LeftNavBar_Design + PT_RightContent);
                $("").ApplyCss();
                $(".PT_signUpView,.PT_LoginView").hide();
                $("").PT_popOver();
                $(".PT_APPName").text(para.appTitle);
            }
            else {
                $(this).html(PT_TopHeader_Design + PT_Content + PT_RightContent);
                $(".PT_signUpView,.PT_LoginView").hide();
                $("").ApplyCss();
                $("").PT_popOver();
                $(".PT_APPName").text(para.appTitle);

            }
        }

        if (PT_ActiveNavigate != null && PT_ActiveNavigate != '')
            $(".PT_Right_Content").load(PT_ActiveNavigate);







        PT_LeftNavBar_Design += '<div class="PT_left_bar" >';
        PT_LeftNavBar_Design += '<ul id="PT_Left_UL">';

        if (para.leftNavItems != undefined) {
            for (i = 0; i < para.leftNavItems.length; i++) {
                if (para.leftNavItems[i].isStartPage) {
                    PT_LeftNavBar_Design += '<li  class="navactive" style="  border-left:4px solid #c53929;"><a href="' + para.leftNavItems[i].url + '">' + para.leftNavItems[i].menuItem + '</a></li>';
                }
                else {
                    PT_LeftNavBar_Design += '<li  class=""><a href="' + para.leftNavItems[i].url + '">' + para.leftNavItems[i].menuItem + '</a></li>';
                }

            }
        }

        PT_LeftNavBar_Design += '</ul></div>';
        PT_RightContent += '<div class="PT_Right_Content"></div></div><div id="windowslider"></div>';
        PT_Content += '<div class="PT_View">';


        // Dynamic Layout End   

        //-----------------------------------------------------------------------------------------------------
        //Layout Design Conditions Start 
        if (para.appHeader) {


            if (para.leftNavBar) {

                $(this).html(PT_TopHeader_Design + PT_secondHeader_Design + PT_Content + PT_LeftNavBar_Design + PT_RightContent);
                $(".PT_signUpView,.PT_LoginView").hide();
                $("").ApplyCss();
                $("").PT_popOver();
                $(".PT_APPName").text(para.appTitle);
            }
            else {
                $(this).html(PT_TopHeader_Design + PT_secondHeader_Design + PT_Content + PT_RightContent);
                $("").ApplyCss();
                $(".PT_signUpView,.PT_LoginView").hide();
                $("").PT_popOver();
                $(".PT_APPName").text(para.appTitle);
            }
        }
        else {
            if (para.leftNavBar) {
                $(this).html(PT_TopHeader_Design + PT_Content + PT_LeftNavBar_Design + PT_RightContent);
                $("").ApplyCss();
                $(".PT_signUpView,.PT_LoginView").hide();
                $("").PT_popOver();
                $(".PT_APPName").text(para.appTitle);
            }
            else {
                $(this).html(PT_TopHeader_Design + PT_Content + PT_RightContent);
                $(".PT_signUpView,.PT_LoginView").hide();
                $("").ApplyCss();
                $("").PT_popOver();
                $(".PT_APPName").text(para.appTitle);

            }
        }

        if (PT_ActiveNavigate != null && PT_ActiveNavigate != '')
            $(".PT_Right_Content").load(PT_ActiveNavigate);

        /*$(".PT_dasboard").rippler({
            effectClass: 'rippler-effect',
            effectSize: 16, // Default size (width & height)
            addElement: 'div', // e.g. 'svg'(feature)
            duration: 400,

        });*/
        (function (exports) {
            $.ripple.init();
        })(window);

        $(".ripple-cont").addClass("navbar-brand PT_title PT_dasboard PT_Token rippler rippler-default rippler-bs-info");
        $(".ripple-cont").css("position", "absolute");
        $(".ripple-cont").css("left", "0px");

        DocumentResize();
    },
    ConnateSlider: function (Details, Activity, Chat) {
        var PT_slide = '';
        var PT_layout_Details = '';
        var PT_layout_Activity = '';
        var PT_layout_Chat = '';
        var PT_layout_content = '';
        var PT_end = '';
        if (Details == null) {
            Details = false;
        }

        if (Activity == null) {
            Activity = false;
        }
        if (Chat == null) {
            Chat = false;
        }
        //Dynamic Slide Layout Start--------------------------------------------------------------------------
        PT_slide += '<div id="PT_slide_Layout">';
        PT_slide += '<div id="PT_Slider_header"><span class="PT_slideTitle">Title</span><span class="glyphicon glyphicon-edit" id="PT_edit"></span><span class="PT_closedIcon">X</span></div>';
        PT_slide += '<div id="PT_slide_section_header">';
        PT_layout_Details += ' <span class="PT_sectiontitle PT_details">Details</span>';
        PT_layout_Activity += '<span class="PT_sectiontitle PT_activity">Activity</span>';
        PT_layout_Chat += '<span class="PT_sectiontitle PT_chat">Chat</span>';
        PT_layout_content += '</div><div id="PT_slide_content">';
        PT_layout_content += '<div id="PT_layoutSctionA"> </div>';
        PT_layout_content += '<div id="PT_layoutSctionB"> </div>';
        PT_layout_content += '<div id="PT_layoutSctionC"> </div>';
        PT_end += '</div></div>';
        if (Details) {
            if (Activity) {
                if (Chat) {
                    $(this).html(PT_slide + PT_layout_Details + PT_layout_Activity + PT_layout_Chat + PT_layout_content + PT_end);
                    $(".PT_details").text(Details);
                    $(".PT_activity").text(Activity);
                    $(".PT_chat").text(Chat);

                }
                else {
                    $(this).html(PT_slide + PT_layout_Details + PT_layout_Activity + PT_layout_content + PT_end);
                    $(".PT_sectiontitle").css({ "width": "50%" });
                    $(".PT_details").text(Details);
                    $(".PT_activity").text(Activity);

                }
            }
            else if (Chat) {

                $(this).html(PT_slide + PT_layout_Details + PT_layout_Chat + PT_layout_content + PT_end);
                $(".PT_sectiontitle").css({ "width": "50%" });
                $(".PT_details").text(Details);
                $(".PT_chat").text(Chat);
            }
            else {
                $(this).html(PT_slide + PT_layout_Details + PT_layout_content + PT_end);
                $(".PT_sectiontitle").css({ "width": "100%" });
                $(".PT_details").text(Details);

            }


        }
        else if (Activity) {
            if (Chat) {
                $(this).html(PT_slide + PT_layout_Activity + PT_layout_Chat + PT_layout_content + PT_end);
                $(".PT_sectiontitle").css({ "width": "50%" });
                $(".PT_activity").text(Activity);
                $(".PT_chat").text(Chat);
            }
            else {
                $(this).html(PT_slide + PT_layout_Activity + PT_layout_content + PT_end);
                $(".PT_sectiontitle").css({ "width": "100%" });
                $(".PT_activity").text(Activity);

            }
        }
        else if (Chat) {
            $(this).html(PT_slide + PT_layout_Chat + PT_layout_content + PT_end);
            $(".PT_sectiontitle").css({ "width": "100%" });
            $(".PT_chat").text(Chat);
        }
        $("#PT_slide_Layout").css({ "top": $("#PT_TopHeader").height() + $("#PT_SecondHeader").height(), "height": $(window).height() - $("#PT_TopHeader").height() - $("#PT_SecondHeader").height() });
        //
        DocumentResize();


        //Dynamic Slide Layout End--------------------------------------------------------------------------
    },
    AnimateSlider: function () {
        $("#PT_slide_Layout").show("slide", { direction: 'right' }, 500);
    },

    //Layout Design Conditions End
    //-----------------------------------------------------------------------------------------------------
    //Dynamic Styles Start
    ApplyCss: function () {
        var navsHeight = $("#PT_TopHeader").height() + $("#PT_SecondHeader").height();
        $(".PT_Right_Content").css({ "height": $(window).height() - navsHeight, "max-height": $(window).height() - navsHeight });
        $("#PT_SecondHeader").css({ "margin-top": $("#PT_TopHeader").height() + 1 });
        $(".PT_View").css({ "margin-top": navsHeight });
        $("#PT_TopHeader").css({ "z-index": 10000 });
        $(".PT_left_bar").css({ "height": $(window).height() - navsHeight, "overflow-y": "auto", "top": navsHeight, "max-height": $(window).height() - navsHeight });

    },
    //Dynamic Styles End
    //---------------------------------------------------------------------------------------------------------
    // Grid and My Account Popover View Start

    PT_popOver: function () {
        $(".PT_MyaccountView a").attr("data-content", "fddf ").addClass("PT_myAccountPopover");
        $('[data-toggle="myAccount"]').popover({
            html: 'true',
            template:
                '<div class="popover awesome-popover-class PT_Account"   >' +
                    '<div class="arrow"></div>' +
                    '<div class="popover-inner">' +
                        '<h3 class="popover-title"></h3>' +
                        '<div class="popover-content useraccount  ">' +
                            '<p></p>' +
                        '</div>' +
                    '</div>' +
                '</div>',
            content: function () { $(this).attr('data-content', test($(this))); }
        });
        $(".PT_GridView a").attr("data-content", "fdfd").addClass("PT_GridPopover");
        $('[data-toggle="myApps"]').popover({
            html: 'true',
            template:
                '<div class="popover awesome-popover-class PT_Grid"  >' +
                    '<div class="arrow"></div>' +
                    '<div class="popover-inner">' +
                        '<h3 class="popover-title"></h3>' +
                        '<div class="popover-content userapps">' +
                            '<p></p>' +
                        '</div>' +
                    '</div>' +
                '</div>',
            content: function () { $(this).attr('data-content', test($(this))); }
        });
    },

    PT_bind_menu: function (PT_menu_Items) {
        PT_bindmenu_bar = '<ul id="PT_Left_UL">';
        if (PT_menu_Items.appNavItems != undefined) {
            for (i = 0; i < PT_menu_Items.appNavItems.length; i++) {
                if (PT_menu_Items.appNavItems[i].isStartPage) {
                    PT_bindmenu_bar += '<li  class="navactive" style="  border-left:4px solid #c53929;"><a href="' + PT_menu_Items.appNavItems[i].url + '">' + PT_menu_Items.appNavItems[i].menuItem + '</a></li>';
                }
                else {
                    PT_bindmenu_bar += '<li  class=""><a href="' + PT_menu_Items.appNavItems[i].url + '">' + PT_menu_Items.appNavItems[i].menuItem + '</a></li>';
                }

            }
            $(this).empty();
            console.log(this);
           $(this).html(PT_bindmenu_bar);
        }
    }
});

//-----------------------------------------------------Slider Events--------------------------------------------------

$(document).on("click", "#PT_slide_section_header span", function () {
    $(".PT_sectiontitle").css({ "border-top": "3px solid rgba(0, 0, 0, .25)" })
    $(this).css({ "border-top": "3px solid #4285f4" });
});
$(document).on("click", ".PT_closedIcon", function () {
    $("#PT_slide_Layout").hide("slide", { direction: 'right' }, 500);
});


//-----------------------------------------------------Slider Events End--------------------------------------------------

$(document).on("click", ".PT_MyaccountView a", function () {
    var MyaccontContent = '<div class="PT_myaccountmainContent"></div><div class="PT_myaccountFooter SignOut">SignOut</div>';
    $(".useraccount").html('');
    $(MyaccontContent).appendTo(".useraccount");
    MyAccount();
});
$(document).on("click", ".PT_GridView a", function () {
    var MyGridContent = '<div class="PT_myGridViewContent"> </div><div class="PT_myaccountFooter"><a href="' + PT_StoreURL + '" target="_blank">More</div>';
    $(".userapps").html('');
    $(MyGridContent).appendTo(".userapps");
    GetProjects();
});

// Grid and My Account Popover View End
//-----------------------------------------------------------------------------------------------------------
// window Resize Event start
$(window).resize(function () {
    var navsHeight = $("#PT_TopHeader").height() + $("#PT_SecondHeader").height();
    $(".PT_Right_Content").css({ "height": $(window).height() - navsHeight, "max-height": $(window).height() - navsHeight });
    $(".PT_left_bar").css({ "height": $(window).height() - navsHeight, "overflow-y": "auto", "top": navsHeight, "max-height": $(window).height() - navsHeight });

    //  $("").ApplyCss();
    //  $(".PT_Right_Content").css({ "height": $(document).height() - 111, "max-height": $(document).height() - 111 });
    DocumentResize();
});
function DocumentResize() {
    if (window.innerWidth < 768) {
        $(".PT_mobile").css("visibility", "visible");
        $(".PT_left_bar").hide();
        $(".PT_Right_Content").css({ "width": $(document).width() });
        $("#PT_slide_Layout").css({ "width": $(document).width(), "height": $(window).height() - $("#PT_TopHeader").height() - $("#PT_SecondHeader").height() });
        //data-target="#PT_SecondHeaders"
        $("#PT_secondheader_UL").attr("data-target", "#PT_SecondHeaders");
        $(".PT_SecondRightMenu").attr({ "data-target": "#PT_SecondHeaders", "data-toggle": "collapse" });

    }
    else {
        $(".PT_mobile").css("visibility", "hidden");
        $(".PT_left_bar").show();
        $(".PT_Right_Content").css({ "width": $(document).width() - $(".PT_left_bar").width() });
        $("#PT_slide_Layout").css({ "width": "400px", "height": $(window).height() - $("#PT_TopHeader").height() - $("#PT_SecondHeader").height() });
        $("#PT_secondheader_UL").removeAttr("data-target");
        $(".PT_SecondRightMenu").removeAttr("data-target");
    }
}

// window Resize Event End
//--------------------------------------------------------------------------------------------------
// Left Nav bar Animation Start
//$(document).on("click", "body", function () {
//    if (window.innerWidth < 768) {
//        if ($(".PT_left_bar").attr('data-State') == 'Open') {
//            toggleMenu()
//        }
//    }
//});
$(document).on("click", ".PT_mobile", function () {
    //if ($(".PT_left_bar").attr('data-State') == 'close') {
    //    toggleMenu()
    //}
    $('.PT_left_bar').toggle("slide", { direction: 'left' }, 500);
});
function toggleMenu() {
    $('.PT_left_bar').toggle("slide", { direction: 'left' }, 500, function () {
        if ($(".PT_left_bar").attr('data-State') == 'Open')
            $(".PT_left_bar").attr('data-State', 'close');
        else
            $(".PT_left_bar").attr('data-State', 'Open');
    });

}
// Left Nav bar Animation end
//----------------------------------------------------------------------------------------------------
// Custom Ajax Function start
var PT_doAjax = function (Url, Type, Data, ContentType, DataType, preLoader, getBack) {
    $.ajax({
        url: Url,
        type: Type,
        data: JSON.stringify(Data),
        contentType: ContentType,
        dataType: DataType,
        beforeSend: function () { if (preLoader) $('.' + preLoader).css("display", 'block'); },
        complete: function () { if (preLoader) $('.' + preLoader).css("display", 'none') },
        success: function (Response) {
            getBack(null, Response);
        },
        error: function (XMLHttpRequest, textStatus, errorThrown) {
            getBack({ Status: 0, InfoOpts: 501, Data: {} });
        }
    });
}
// Custom Ajax Function end
//---------------------------------------------------------------------------------------------------------
//Popover Auto Hide Event Start
$(document).on('click', "body", function (e) {
    $('[data-toggle="myAccount"]').each(function () {
        if (!$(this).is(e.target) && $(this).has(e.target).length === 0 && $('.popover').has(e.target).length === 0) {
            $(this).popover('hide');
        }
    });
});
$(document).on('click', "body", function (e) {
    $('[data-toggle="myApps"]').each(function () {
        if (!$(this).is(e.target) && $(this).has(e.target).length === 0 && $('.popover').has(e.target).length === 0) {
            $(this).popover('hide');
        }
    });
});

//Popover Auto Hide Event end
//-------------------------------------------------------------------------------------------------------
//Trim String Function Start

function trimString(T_String, T_String_Length) {
    var Out_String = T_String;
    if (T_String.length > T_String_Length) {
        Out_String = T_String.substring(0, T_String_Length) + "...";
    }
    return Out_String;
}

//Trim String Function End
//---------------------------------------------------------------------------------------------------
//Service To get User details start
function MyAccount() {
    $(".PT_myaccountmainContent").html('');
    var Pt_myacountdetails = "<div class='PT_accontimg'><img src='/Content/Images/layoutimgs/person-flat.png' class=''/></div>";
    Pt_myacountdetails += '<div class="PT_viewdetails"><span class="PT_users"> </span>';
    Pt_myacountdetails += '<span class="PT_email"> </span><a class="btn btn-block PT_myaccountbtn" href="' + PT_MyAccountURL + '"       target="_blank" >My Account</a></div>';
    $(".PT_myaccountmainContent").append(Pt_myacountdetails);
    PT_doAjax(PT_UserDetailsApi, 'post', { "UserId": PT_UserID }, 'application/json', "json", '', function (err, result) {
        if (err) {
        }
        else {
            console.log(result);
            $(".PT_UserName a").html('');
            $(".PT_UserName a").html(result.LoginInfo.UserName);
            $(".PT_users,.PT_email").html('');
            $(".PT_users").html(result.LoginInfo.UserName)
            $(".PT_email").html(result.LoginInfo.EmailId)
        }
    });
}
$(document).on("click", ".SignOut", function () {
    UserSignOut();
});
//Service To get User details end
//-------------------------------------------------------------------------------------------------------
//Service To get User Apps start
function GetProjects() {
    PT_doAjax(PT_MyAppsAPI, 'post', { "UserId": PT_UserID }, 'application/json', "json", '', function (err, result) {
        if (err) {

        }
        else {
            console.log(result);
            var MyProjectList = '';
            $.each(result, function (key, element) {
                var temp = '';

                temp += '<div style="background-color:white;border:0;" class="panel-heading MyProjects">';
                temp += '<a href="/apps/' + element['AppURI'] + '"  >';
                temp += '<img class="img-circle project-icon" src ="' + PT_ConnateCDN + 'FileName=' + element["AppIcon"] + '&FileType=2" height="64" width="64" />';
                temp += '<span style="padding-top:5px;text-transform: capitalize;">' + trimString(element['AppName'], 7) + '</span>';
                temp += '</a></div>';
                MyProjectList += temp;
            });
            $(".PT_myGridViewContent").html('');
            $(".PT_myGridViewContent").append(MyProjectList);
        }
    });
}
//Service To get User Apps End






function navigateToDashBoard() {
    window.location = "/Home/Layout";
}

function UserSignOut() {
    PT_doAjax(PT_DisconnectSession, 'get', '', 'application/json', "json", '', function (err, result) {
        if (err) {

        } else {
            if (result.UserDisconnected == 0) {
                window.location = PT_loginNavigation;

            } else {
                //goToHome();
            }
        }
    });
}

var PT_UserID = '';
var PT_ProjectID = PT_getSubdomain();
if (PT_ProjectID == '') {
    PT_ProjectID = 'P0000001';
}
var PT_AppsID = 'A000001';
//independent Links
var PT_DisconnectSession = '/UserSession/DisconnectSession';
var PT_NavigateToFileShare = '';
var PT_ProjectAccess = '/api/Authentication/HasprojectAccess';
var PT_AppAcces = '/api/Authentication/HasAppAccess';
var PT_GetSession = '/UserSession/GetSession';

//Domain Urls
var PT_HasAppAccessAPI = '';
var PT_StoreURL = '';
var PT_UserProjectsAPI = '';
var PT_ProjectFilesAPI = '';
var PT_NavigateToProject = '';
var PT_MyAccountURL = '';
var PT_MyAppsAPI = '';
var PT_ConnateCDN = '';
var PT_UserDetailsApi = '';
var PT_loginNavigation = '';
var PT_HomeNavigation = '';
var PT_GlobalToken = '';
var PT_bindmenu_bar='';
var PT_ActiveNavigate = null;
function PT_LoadDomainUrl() {
    var PT_Hosting = PT_getSubdomain();
    var PT_temp = window.location.href;
    var PT_arr = PT_temp.split("/");
    var PT_dom = PT_arr[2].split(".");
    var PT_length = PT_dom.length;
    if (PT_length == 1) {
        PT_Hosting = "Localhost";
    }
    else {
        console.log(PT_dom);
        PT_Hosting = PT_dom[1];
    }

    var PT_CheckLocDom = 'Localhost';
    var PT_CheckSblDom = 'Sblsol';
    var PT_CheckConDom = 'Connate';

    if (PT_Hosting.toUpperCase() == PT_CheckConDom.toUpperCase()) {
        console.log('Connate');
        PT_HasAppAccessAPI = 'https://appstoreservice.connate.cc/api/apps/hasAppAccess';
        PT_StoreURL = 'https://store.connate.cc/';
        PT_UserProjectsAPI = 'https://appstoreservice.connate.cc/api/project/getUserProjects';
        PT_NavigateToProject = 'http://' + PT_ProjectID + 'connate.cc';
        PT_MyAccountURL = 'https://home.connate.cc/User/MyAccount';
        PT_MyAppsAPI = 'https://appstoreservice.connate.cc/api/Apps/myapps';
        PT_NavigateToFileShare = '/apps/A000001/FileShare';
        PT_ConnateCDN = 'https://ConnateCDN.connate.cc/api/ProjectIcons/DownloadFile?';
        PT_UserDetailsApi = 'https://login.connate.cc/api/UserRegister/ProfileFullDetails';
        PT_loginNavigation = 'https://login.connate.cc/';
        PT_HomeNavigation = 'https://home.connate.cc/Home/DashBoard';
        PT_GetSession = '/UserSession/GetSession';



    }

    else if (PT_Hosting.toUpperCase() == PT_CheckLocDom.toUpperCase() || PT_Hosting.toUpperCase() == PT_CheckSblDom.toUpperCase()) {

        if (PT_Hosting.toUpperCase() == PT_CheckSblDom.toUpperCase()) {
            PT_HasAppAccessAPI = 'http://appstoreservice.sblsol.com/api/apps/hasAppAccess';
            PT_StoreURL = 'http://store.sblsol.com/';
            PT_UserProjectsAPI = 'http://appstoreservice.sblsol.com/api/project/getUserProjects';;
            PT_NavigateToProject = 'http://' + PT_ProjectID + 'sblsol.com';
            PT_MyAccountURL = 'http://bimsitetest.sblsol.com/User/MyAccount';
            PT_MyAppsAPI = 'http://appstoreservice.sblsol.com/api/Apps/myapps';
            PT_ConnateCDN = 'http://ConnateCDN.sblsol.com/api/ProjectIcons/DownloadFile?';
            PT_UserDetailsApi = 'http://login.sblsol.com/api/UserRegister/ProfileFullDetails';
            PT_loginNavigation = 'http://login.sblsol.com/';
            PT_HomeNavigation = 'http://bimsitetest.sblsol.com/Home/DashBoard';
            PT_GetSession = '/UserSession/GetSession';
            console.log('Sblsol');
        }
        else {

            PT_HasAppAccessAPI = 'http://appstoreservice.sblsol.com/api/apps/hasAppAccess';
            PT_StoreURL = 'http://store.sblsol.com/';
            PT_UserProjectsAPI = 'http://appstoreservice.sblsol.com/api/project/getUserProjects';
            PT_NavigateToProject = 'http://' + PT_ProjectID + 'sblsol.com';
            PT_MyAccountURL = 'http://bimsitetest.sblsol.com/User/MyAccount';
            PT_MyAppsAPI = 'http://appstoreservice.sblsol.com/api/Apps/myapps';
            PT_ConnateCDN = 'http://ConnateCDN.sblsol.com/api/ProjectIcons/DownloadFile?';
            PT_UserDetailsApi = 'http://login.sblsol.com/api/UserRegister/ProfileFullDetails';
            PT_loginNavigation = 'http://login.sblsol.com/';
            PT_HomeNavigation = 'http://bimsitetest.sblsol.com/Home/DashBoard';
            PT_GetSession = '/UserSession/GetSession';
            console.log('Localhost');
        }

    }
}
//E:\BIMSProject\BIMSite ProjectMaster\Content/Images/layoutimgs/Grid.svg

PT_LoadDomainUrl();

//----------------------------------------------For Getting SubDomain Url
function PT_getSubdomain() {
    var PT_regexParse = new RegExp('[a-z\-0-9]{2,63}\.[a-z\.]{2,5}$');
    var PT_urlParts = PT_regexParse.exec(window.location.hostname);

    return window.location.hostname.replace(PT_urlParts[0], '').slice(0, -1);
}
var PT_Url = window.location.href;
var PT_AppName = PT_Url.split("/");
PT_AppID = PT_AppName[4];
PT_AppID = PT_AppName[4];




$(document).on("click", ".PT_traget_Menu", function (event) {
    $(".PT_cog").removeClass("PT_Img_opacity");
    var url = $(this).children("a").attr("href");
    event.preventDefault();
    $(".PT_traget_Menu").removeClass("PT_activemenu")
    $(this).addClass("PT_activemenu");
    if ((event.target.className == "PT_cog")) {

        $(".PT_cog").addClass("PT_Img_opacity");
    }

    if (url != null && url != '') {
        $(".PT_Right_Content").load(url);
    }
  

});

//